jobs:
  - name: platform-oauth_prod_platform_create_secrets
    type: runSh
    steps:
      - IN: platform-oauth_stage_platform_integration_tests
      - IN: prod_platform_kube_cli_config
      - IN: platform_docker_cli_config
      - IN: platform-oauth_prod_platform_secrets
      - IN: platform_secrets_password
      - TASK:
          name: create_secrets
          script:
            - export DATABASE_URL=$(docker run -e PASSWORD=$ENCRYPTION_KEY --entrypoint yarn casestack/cgen-server --silent decrypt $DATABASE_URL)
            - export FORCE_ROOT_CLIENT_CREDENTIALS=$(docker run -e PASSWORD=$ENCRYPTION_KEY --entrypoint yarn casestack/cgen-server --silent decrypt $FORCE_ROOT_CLIENT_CREDENTIALS)
            - export SYSTEM_SECRET=$(docker run -e PASSWORD=$ENCRYPTION_KEY --entrypoint yarn casestack/cgen-server --silent decrypt $SYSTEM_SECRET)
            - 'export DATABASE_URL=$(if [ -z $DATABASE_URL ]; then echo "''''"; else echo -n $DATABASE_URL | base64 -w 0; fi)'
            - 'export FORCE_ROOT_CLIENT_CREDENTIALS=$(if [ -z $FORCE_ROOT_CLIENT_CREDENTIALS ]; then echo "''''"; else echo -n $FORCE_ROOT_CLIENT_CREDENTIALS | base64 -w 0; fi)'
            - 'export SYSTEM_SECRET=$(if [ -z $SYSTEM_SECRET ]; then echo "''''"; else echo -n $SYSTEM_SECRET | base64 -w 0; fi)'
            - |-
              echo "apiVersion: v1
              kind: Secret
              metadata:
                name: platform-oauth
                namespace: platform-prod
              type: Opaque
              data:
                DATABASE_URL: $DATABASE_URL
                FORCE_ROOT_CLIENT_CREDENTIALS: $FORCE_ROOT_CLIENT_CREDENTIALS
                SYSTEM_SECRET: $SYSTEM_SECRET" > ./secrets.yaml
            - kubectl -n platform-prod delete secret/platform-oauth 2>/dev/null || echo "no pre-existing secrets"
            - kubectl -n platform-prod create -f secrets.yaml
  - name: platform-oauth_prod_platform_deploy
    type: deploy
    stabilityDuration: 120
    maxWaitTime: 300
    steps:
      - IN: platform-oauth_prod_platform_create_secrets
      - IN: platform-oauth_stage_platform_deploy
        switch: 'off'
      - IN: prod_platform_cluster
      - IN: platform-oauth_prod_platform_opts
        applyTo:
          - platform-oauth_image
      - IN: platform-oauth_prod_platform_replicas
        applyTo:
          - platform-oauth_image
      - IN: platform-oauth_prod_platform_params
        applyTo:
          - platform-oauth_image
  - name: platform-oauth_prod_platform_smoke_tests
    type: runSh
    steps:
      - IN: platform-oauth_prod_platform_deploy
      - IN: platform_docker_cli_config
      - IN: prod_platform_smoke_tests_params
      - IN: prod_platform_smoke_tests_secrets
      - IN: platform-ui_platform_smoke_tests_global_state
      - TASK:
          name: smoke_tests
          script:
            - export SMOKE_TAG=$(shipctl get_resource_version_key platform-ui_platform_smoke_tests_global_state "SMOKE_TAG")
            - 'docker run -e BROWSER -e BROWSER_STACK_BUILD_VERSION=$SMOKE_TAG -e SERVER_NAME -e URL -e BROWSER_STACK_KEY -e BROWSER_STACK_USER casestack/platform-ui:$SMOKE_TAG'
    on_failure:
      - NOTIFY: platform_slack_notifications
resources:
  - name: platform-oauth_prod_platform_secrets
    type: params
    versionTemplate:
      params:
        DATABASE_URL: 'postgres://hydra:GhaQaYKRlhuCLtDyyAGC8DLuiZXd8bHd@hydra-database.private:5432/hydra?sslmode=disable'
        FORCE_ROOT_CLIENT_CREDENTIALS: 'admin:y76TY8tgu8AtqWYCOwxR'
        SYSTEM_SECRET: fzEMUl7osIrpuh93gun9OSjYIpggiQ
  - name: platform-oauth_prod_platform_opts
    type: dockerOptions
    versionTemplate:
      portMappings:
        - ':4444'
      labels:
        service: platform-oauth
        environment: prod
        app: platform
      resources:
        limits:
          cpu: 200m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi
      livenessProbe:
        httpGet:
          path: /health
          port: 4444
        initialDelaySeconds: 30
        timeoutSeconds: 1
      readinessProbe:
        httpGet:
          path: /health
          port: 4444
        initialDelaySeconds: 30
        timeoutSeconds: 1
      envFrom:
        - secretRef:
            name: platform-oauth
  - name: platform-oauth_prod_platform_replicas
    type: replicas
    versionTemplate:
      count: 2
  - name: platform-oauth_prod_platform_loadbalancer
    type: loadBalancer
    integration: prod_cluster
    versionTemplate:
      sourceName: platform-oauth
      method: ClusterIP
      namespace: platform-prod
      ports:
        - name: port-4444
          port: 4444
          protocol: TCP
      selector:
        service: platform-oauth
        environment: prod
        app: platform
  - name: platform-oauth_prod_platform_params
    type: params
    versionTemplate:
      params:
        ISSUER: 'https://navigator.supplypike.com'
        CONSENT_URL: 'https://navigator.supplypike.com/consent'
        ID_TOKEN_LIFESPAN: 1h
        LOG_LEVEL: warn
        ACCESS_TOKEN_LIFESPAN: 1h
        AUTHORIZE_CODE_LIFESPAN: 10m
