jobs:
  - name: postgres_platform_manifest
    type: manifest
    steps:
      - IN: postgres_image
      - IN: postgres_test_platform_replicas
  - name: postgres_test_platform_deploy
    type: deploy
    stabilityDuration: 120
    maxWaitTime: 300
    steps:
      - IN: postgres_platform_manifest
        deployName: postgres
      - IN: test_platform_cluster
      - IN: postgres_test_platform_opts
        applyTo:
          - postgres_image
      - IN: postgres_test_platform_replicas
        applyTo:
          - postgres_image
      - IN: postgres_test_platform_params
        applyTo:
          - postgres_image
  - name: postgres_test_platform_post_deploy
    type: runSh
    steps:
      - IN: postgres_test_platform_post_deploy_params
      - IN: postgres_test_platform_deploy
      - IN: test_platform_kube_cli_config
      - TASK:
          name: create_kube_job
          script:
            - |-
              echo "apiVersion: batch/v1
              kind: Job
              metadata:
                name: platform-hydra-init
              spec:
                template:
                  spec:
                    containers:
                    - name: platform-hydra-init
                      image: casestack/platform-hydra-init:0.0.3
                      env:
                      - name: DATABASE_URL
                        value: memory
                      - name: POSTGRES_URL
                        value: postgres://hydra:secret@postgres:5432/hydra?sslmode=disable
                      - name: FORCE_ROOT_CLIENT_CREDENTIALS
                        value: admin:demo-password
                      - name: SYSTEM_SECRET
                        value: abcdefghiklmnopqrstuvwxyzabcdef
                    restartPolicy: Never" > job.yaml
            - kubectl apply -n platform-test -f job.yaml
  - name: postgres_test_platform_smoke_tests
    type: runSh
    steps:
      - IN: postgres_test_platform_post_deploy
      - IN: platform_docker_cli_config
      - IN: test_platform_smoke_tests_params
      - IN: test_platform_smoke_tests_secrets
      - IN: platform-ui_platform_smoke_tests_global_state
      - TASK:
          name: smoke_tests
          script:
            - export SMOKE_TAG=$(shipctl get_resource_version_key platform-ui_platform_smoke_tests_global_state "SMOKE_TAG")
            - 'docker run -e BROWSER -e BROWSER_STACK_BUILD_VERSION=$SMOKE_TAG -e SERVER_NAME -e URL -e BROWSER_STACK_KEY -e BROWSER_STACK_USER casestack/platform-ui:$SMOKE_TAG'
    on_failure:
      - NOTIFY: platform_slack_notifications
  - name: postgres_test_platform_integration_tests
    type: runSh
    steps:
      - IN: postgres_test_platform_smoke_tests
      - IN: platform_docker_cli_config
      - IN: test_platform_integration_tests_params
      - IN: test_platform_integration_tests_secrets
      - IN: platform-endpoint_platform_integration_tests_global_state
      - TASK:
          name: integration_tests
          script:
            - export INTEGRATION_TAG=$(shipctl get_resource_version_key platform-endpoint_platform_integration_tests_global_state "INTEGRATION_TAG")
            - 'docker run -e BASE_URL -e CONNECT_USER -e CONNECT_PASSWORD casestack/platform-endpoint:$INTEGRATION_TAG'
    on_failure:
      - NOTIFY: platform_slack_notifications
resources:
  - name: postgres_test_platform_opts
    type: dockerOptions
    versionTemplate:
      portMappings:
        - ':5432'
      labels:
        service: postgres
        environment: test
        app: platform
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 300m
          memory: 300Mi
  - name: postgres_test_platform_replicas
    type: replicas
    versionTemplate:
      count: 1
  - name: postgres_test_platform_loadbalancer
    type: loadBalancer
    integration: testing_cluster
    versionTemplate:
      sourceName: postgres
      method: ClusterIP
      namespace: platform-test
      ports:
        - name: port-5432
          port: 5432
          protocol: TCP
      selector:
        service: postgres
        environment: test
        app: platform
  - name: postgres_image
    type: image
    integration: docker-hub
    versionTemplate:
      sourceName: postgres
      versionName: 9.6-alpine
  - name: postgres_test_platform_params
    type: params
    versionTemplate:
      params:
        POSTGRES_USER: hydra
        POSTGRES_PASSWORD: secret
        POSTGRES_DB: hydra
  - name: postgres_post_deploy_image
    type: image
    integration: docker-hub
    versionTemplate:
      sourceName: casestack/platform-hydra-init
      versionName: 0.0.3
  - name: postgres_test_platform_post_deploy_params
    type: params
    versionTemplate:
      params:
        DATABASE_URL: memory
        POSTGRES_URL: 'postgres://hydra:secret@postgres:5432/hydra?sslmode=disable'
        FORCE_ROOT_CLIENT_CREDENTIALS: 'admin:demo-password'
        SYSTEM_SECRET: abcdefghiklmnopqrstuvwxyzabcdef
